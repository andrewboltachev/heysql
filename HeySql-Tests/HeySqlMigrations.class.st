"
This class will keep all migration methods for testing.
"
Class {
	#name : #HeySqlMigrations,
	#superclass : #Object,
	#category : #'HeySql-Tests'
}

{ #category : #'db-migration' }
HeySqlMigrations class >> migrate_2019_11_03T07_55_28Z [
	   "HeySql autogenerated method for adding a migration. Add your code below here."
		| table |
	   
"-- Generated code for class: Campaign"
	
		table := { 
         ( 'companyGroupCompanyId' -> 'integer references companyGroupCompany (id)') . 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') . 
         ( 'startDate' -> 'timestamp') . 
         ( 'stopDate' -> 'timestamp') 
       } asDictionary. 
			
	    HeySql createTable: 'Campaign' tableDict: table.
			
			
"-- Generated code for class: CampaignLine"
	
		table := { 
         ( 'campaignId' -> 'integer references campaign (id)') . 
         ( 'categoryId' -> 'integer references category (id)') . 
         ( 'discount' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'price' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') . 
         ( 'startRange' -> 'type') . 
         ( 'stopRange' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'CampaignLine' tableDict: table.
			
			
"-- Generated code for class: Category"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') 
       } asDictionary. 
			
	    HeySql createTable: 'Category' tableDict: table.
			
			
"-- Generated code for class: CategoryLang"
	
		table := { 
         ( 'categoryId' -> 'integer references category (id)') . 
         ( 'description' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'langId' -> 'integer references lang (id)') . 
         ( 'title' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'CategoryLang' tableDict: table.
			
			
"-- Generated code for class: CategoryParent"
	
		table := { 
         ( 'categoryId' -> 'integer references category (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'parentId' -> 'integer references parent (id)') 
       } asDictionary. 
			
	    HeySql createTable: 'CategoryParent' tableDict: table.
			
			
"-- Generated code for class: Company"
	
		table := { 
         ( 'contactEmail' -> 'type') . 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'createdDate' -> 'timestamp') . 
         ( 'googleMapPos' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'isBuyer' -> 'type') . 
         ( 'isInfluencer' -> 'type') . 
         ( 'isSeller' -> 'type') . 
         ( 'lastLogin' -> 'type') . 
         ( 'url' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Company' tableDict: table.
			
			
"-- Generated code for class: CompanyGroup"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'CompanyGroup' tableDict: table.
			
			
"-- Generated code for class: CompanyGroupCompany"
	
		table := { 
         ( 'companyGroupId' -> 'integer references companyGroup (id)') . 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') 
       } asDictionary. 
			
	    HeySql createTable: 'CompanyGroupCompany' tableDict: table.
			
			
"-- Generated code for class: CompanyLang"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'description' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'langId' -> 'integer references lang (id)') . 
         ( 'name' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'CompanyLang' tableDict: table.
			
			
"-- Generated code for class: Country"
	
		table := { 
         ( 'currencyId' -> 'integer references currency (id)') . 
         ( 'defaultLangId' -> 'integer references defaultLang (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') . 
         ( 'vat' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Country' tableDict: table.
			
			
"-- Generated code for class: Currency"
	
		table := { 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') . 
         ( 'symbol' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Currency' tableDict: table.
			
			
"-- Generated code for class: DefaultPrice"
	
		table := { 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'price' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') . 
         ( 'startRange' -> 'type') . 
         ( 'stopRange' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'DefaultPrice' tableDict: table.
			
			
"-- Generated code for class: Dispached"
	
		table := { 
         ( 'id' -> 'serial primary key') . 
         ( 'productLineId' -> 'integer references productLine (id)') . 
         ( 'sendDate' -> 'timestamp') 
       } asDictionary. 
			
	    HeySql createTable: 'Dispached' tableDict: table.
			
			
"-- Generated code for class: Lang"
	
		table := { 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Lang' tableDict: table.
			
			
"-- Generated code for class: Order"
	
		table := { 
         ( 'campaignId' -> 'integer references campaign (id)') . 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'personId' -> 'integer references person (id)') . 
         ( 'total' -> 'type') . 
         ( 'vat' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Order' tableDict: table.
			
			
"-- Generated code for class: OrderLine"
	
		table := { 
         ( 'campaignId' -> 'integer references campaign (id)') . 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'date' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'num' -> 'type') . 
         ( 'orderId' -> 'integer references order (id)') . 
         ( 'price' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') 
       } asDictionary. 
			
	    HeySql createTable: 'OrderLine' tableDict: table.
			
			
"-- Generated code for class: Person"
	
		table := { 
         ( 'createdDate' -> 'timestamp') . 
         ( 'email' -> 'type') . 
         ( 'forname' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'lastLogin' -> 'type') . 
         ( 'password' -> 'type') . 
         ( 'surname' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Person' tableDict: table.
			
			
"-- Generated code for class: PersonRole"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'createdAt' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'personId' -> 'integer references person (id)') . 
         ( 'role' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'PersonRole' tableDict: table.
			
			
"-- Generated code for class: Price"
	
		table := { 
         ( 'campaignId' -> 'integer references campaign (id)') . 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'startRange' -> 'type') . 
         ( 'stopRange' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Price' tableDict: table.
			
			
"-- Generated code for class: Product"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') 
       } asDictionary. 
			
	    HeySql createTable: 'Product' tableDict: table.
			
			
"-- Generated code for class: ProductLang"
	
		table := { 
         ( 'descpription' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'imageName' -> 'type') . 
         ( 'imageUrl' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') . 
         ( 'title' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'ProductLang' tableDict: table.
			
			
"-- Generated code for class: ShippingPrice"
	
		table := { 
         ( 'amount' -> 'type') . 
         ( 'currencyId' -> 'integer references currency (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'isIndivudual' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') . 
         ( 'rangeStart' -> 'type') . 
         ( 'rangeStop' -> 'type') . 
         ( 'shippingZoneId' -> 'integer references shippingZone (id)') . 
         ( 'vat' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'ShippingPrice' tableDict: table.
			
			
"-- Generated code for class: ShippingZone"
	
		table := { 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') . 
         ( 'shippingZoneId' -> 'integer references shippingZone (id)') 
       } asDictionary. 
			
	    HeySql createTable: 'ShippingZone' tableDict: table.
			
			
	
	
]

{ #category : #'db-migration' }
HeySqlMigrations class >> migrate_2019_11_03T07_56_35Z [
	   "HeySql autogenerated method for adding a migration. Add your code below here."
		| table |
	   
"-- Generated code for class: Campaign"
	
		table := { 
         ( 'companyGroupCompanyId' -> 'integer references companyGroupCompany (id)') . 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') . 
         ( 'startDate' -> 'timestamp') . 
         ( 'stopDate' -> 'timestamp') 
       } asDictionary. 
			
	    HeySql createTable: 'Campaign' tableDict: table.
			
			
"-- Generated code for class: CampaignLine"
	
		table := { 
         ( 'campaignId' -> 'integer references campaign (id)') . 
         ( 'categoryId' -> 'integer references category (id)') . 
         ( 'discount' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'price' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') . 
         ( 'startRange' -> 'type') . 
         ( 'stopRange' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'CampaignLine' tableDict: table.
			
			
"-- Generated code for class: Category"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') 
       } asDictionary. 
			
	    HeySql createTable: 'Category' tableDict: table.
			
			
"-- Generated code for class: CategoryLang"
	
		table := { 
         ( 'categoryId' -> 'integer references category (id)') . 
         ( 'description' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'langId' -> 'integer references lang (id)') . 
         ( 'title' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'CategoryLang' tableDict: table.
			
			
"-- Generated code for class: CategoryParent"
	
		table := { 
         ( 'categoryId' -> 'integer references category (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'parentId' -> 'integer references parent (id)') 
       } asDictionary. 
			
	    HeySql createTable: 'CategoryParent' tableDict: table.
			
			
"-- Generated code for class: Company"
	
		table := { 
         ( 'contactEmail' -> 'type') . 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'createdDate' -> 'timestamp') . 
         ( 'googleMapPos' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'isBuyer' -> 'type') . 
         ( 'isInfluencer' -> 'type') . 
         ( 'isSeller' -> 'type') . 
         ( 'lastLogin' -> 'type') . 
         ( 'url' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Company' tableDict: table.
			
			
"-- Generated code for class: CompanyGroup"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'CompanyGroup' tableDict: table.
			
			
"-- Generated code for class: CompanyGroupCompany"
	
		table := { 
         ( 'companyGroupId' -> 'integer references companyGroup (id)') . 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') 
       } asDictionary. 
			
	    HeySql createTable: 'CompanyGroupCompany' tableDict: table.
			
			
"-- Generated code for class: CompanyLang"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'description' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'langId' -> 'integer references lang (id)') . 
         ( 'name' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'CompanyLang' tableDict: table.
			
			
"-- Generated code for class: Country"
	
		table := { 
         ( 'currencyId' -> 'integer references currency (id)') . 
         ( 'defaultLangId' -> 'integer references defaultLang (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') . 
         ( 'vat' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Country' tableDict: table.
			
			
"-- Generated code for class: Currency"
	
		table := { 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') . 
         ( 'symbol' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Currency' tableDict: table.
			
			
"-- Generated code for class: DefaultPrice"
	
		table := { 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'price' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') . 
         ( 'startRange' -> 'type') . 
         ( 'stopRange' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'DefaultPrice' tableDict: table.
			
			
"-- Generated code for class: Dispached"
	
		table := { 
         ( 'id' -> 'serial primary key') . 
         ( 'productLineId' -> 'integer references productLine (id)') . 
         ( 'sendDate' -> 'timestamp') 
       } asDictionary. 
			
	    HeySql createTable: 'Dispached' tableDict: table.
			
			
"-- Generated code for class: Lang"
	
		table := { 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Lang' tableDict: table.
			
			
"-- Generated code for class: Order"
	
		table := { 
         ( 'campaignId' -> 'integer references campaign (id)') . 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'personId' -> 'integer references person (id)') . 
         ( 'total' -> 'type') . 
         ( 'vat' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Order' tableDict: table.
			
			
"-- Generated code for class: OrderLine"
	
		table := { 
         ( 'campaignId' -> 'integer references campaign (id)') . 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'date' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'num' -> 'type') . 
         ( 'orderId' -> 'integer references order (id)') . 
         ( 'price' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') 
       } asDictionary. 
			
	    HeySql createTable: 'OrderLine' tableDict: table.
			
			
"-- Generated code for class: Person"
	
		table := { 
         ( 'createdDate' -> 'timestamp') . 
         ( 'email' -> 'type') . 
         ( 'forname' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'lastLogin' -> 'type') . 
         ( 'password' -> 'type') . 
         ( 'surname' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Person' tableDict: table.
			
			
"-- Generated code for class: PersonRole"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'createdAt' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'personId' -> 'integer references person (id)') . 
         ( 'role' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'PersonRole' tableDict: table.
			
			
"-- Generated code for class: Price"
	
		table := { 
         ( 'campaignId' -> 'integer references campaign (id)') . 
         ( 'countryId' -> 'integer references country (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'startRange' -> 'type') . 
         ( 'stopRange' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'Price' tableDict: table.
			
			
"-- Generated code for class: Product"
	
		table := { 
         ( 'companyId' -> 'integer references company (id)') . 
         ( 'id' -> 'serial primary key') 
       } asDictionary. 
			
	    HeySql createTable: 'Product' tableDict: table.
			
			
"-- Generated code for class: ProductLang"
	
		table := { 
         ( 'descpription' -> 'type') . 
         ( 'id' -> 'serial primary key') . 
         ( 'imageName' -> 'type') . 
         ( 'imageUrl' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') . 
         ( 'title' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'ProductLang' tableDict: table.
			
			
"-- Generated code for class: ShippingPrice"
	
		table := { 
         ( 'amount' -> 'type') . 
         ( 'currencyId' -> 'integer references currency (id)') . 
         ( 'id' -> 'serial primary key') . 
         ( 'isIndivudual' -> 'type') . 
         ( 'productId' -> 'integer references product (id)') . 
         ( 'rangeStart' -> 'type') . 
         ( 'rangeStop' -> 'type') . 
         ( 'shippingZoneId' -> 'integer references shippingZone (id)') . 
         ( 'vat' -> 'type') 
       } asDictionary. 
			
	    HeySql createTable: 'ShippingPrice' tableDict: table.
			
			
"-- Generated code for class: ShippingZone"
	
		table := { 
         ( 'id' -> 'serial primary key') . 
         ( 'name' -> 'type') . 
         ( 'shippingZoneId' -> 'integer references shippingZone (id)') 
       } asDictionary. 
			
	    HeySql createTable: 'ShippingZone' tableDict: table.
			
			
	
	
]
