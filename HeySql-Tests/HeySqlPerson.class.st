"
Simple test class to play with.
"
Class {
	#name : #HeySqlPerson,
	#superclass : #HeySql,
	#instVars : [
		'forename',
		'surname',
		'description',
		'email'
	],
	#category : #'HeySql-Tests-Initialize'
}

{ #category : #accessor }
HeySqlPerson class >> byEmail: p1 [ 
	     "Autogenerated heysql-method"
	     | statement result |
	     statement := Statements at: 'byEmail'.
	     result := statement query: { p1 }. 
	
	     ^ (self toObject: result).
	    
]

{ #category : #accessor }
HeySqlPerson class >> byId: p1 [ 
	     "Autogenerated heysql-method"
	     | statement result |
	     statement := Statements at: 'byId'.
	     result := statement query: { p1 }. 
	
	     ^ (self toObject: result).
	    
]

{ #category : #'instance creation' }
HeySqlPerson class >> new [
	^ super new.
]

{ #category : #accessor }
HeySqlPerson class >> personsFindByForename: p1  surname: p2 [ 
	     "Autogenerated heysql-method"
	     | statement result |
	     statement := Statements at: 'personsFindByForename, surname'.
	     result := statement query: { p1. p2 }. 
	
	     ^ (self toObject: result).
	    
]

{ #category : #accessor }
HeySqlPerson class >> personsFindall [ 
	     "Autogenerated heysql-method"
	     | statement result |
	     statement := Statements at: 'personsFindall'.
	     result := statement query: {  }. 
	
	     ^ (self toObject: result).
	    
]

{ #category : #accessor }
HeySqlPerson >> forename [ 
	    "Autogenerated HeySql getter"
	    ^forename.
	  
]

{ #category : #accessor }
HeySqlPerson >> forename: x [  
	    "Autogenerated HeySql setter"
	    forename := x.
	  
]

{ #category : #accessor }
HeySqlPerson >> id [ 
	    "Autogenerated HeySql getter"
	    ^id.
	  
]

{ #category : #accessor }
HeySqlPerson >> id: x [  
	    "Autogenerated HeySql setter"
	    id := x.
	  
]

{ #category : #db }
HeySqlPerson >> insert [
	   "HeySql autogenerated method for inserting objects"
	   | values res newId |
		values := (self class dbFields) collect: [ :field |
		  self perform: (field asSymbol).
		 ].
	   res := InsertDb query: values.
	   newId := ((res data) at: 1) at: 1.
	   self id: newId.
	   ^ res. 
	
]

{ #category : #accessor }
HeySqlPerson >> surname [ 
	    "Autogenerated HeySql getter"
	    ^surname.
	  
]

{ #category : #accessor }
HeySqlPerson >> surname: x [  
	    "Autogenerated HeySql setter"
	    surname := x.
	  
]

{ #category : #db }
HeySqlPerson >> update [
	   "HeySql autogenerated method for inserting objects"
	   | values res fields id |
	   fields := (self class dbFields) select: [ :f | f ~~ 'id' ].
		values := fields collect: [ :field |
		  self perform: (field asSymbol).
		 ].
	   id := self id.
	   res := UpdateDb query: values , {id}.
	   ^ res. 
	
]
